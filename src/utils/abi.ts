export const ROUTER_ABI = [];
export const FACTORY_ABI = [];
export const LP_ABI = [];
export const ERC20_ABI = [];
export const FARM_ABI = [];
export const BETTING_ABI = [
  {
    inputs: [
      { internalType: "address", name: "vrfCoordinator", type: "address" },
      { internalType: "address", name: "link", type: "address" },
      { internalType: "bytes32", name: "keyHash", type: "bytes32" },
      { internalType: "address", name: "_stakingaddress", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "DiceLanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "roller",
        type: "address",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "BetID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "PlayerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "RewardValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ProfitValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "BetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "PlayerNumber",
        type: "uint256",
      },
    ],
    name: "LogBet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "BetID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_result",
        type: "string",
      },
    ],
    name: "LogOutput",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "SentToAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "AmountTransferred",
        type: "uint256",
      },
    ],
    name: "LogOwnerTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "BetID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "PlayerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "RefundValue",
        type: "uint256",
      },
    ],
    name: "LogRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "BetID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "PlayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "PlayerNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "DiceResult",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "Status",
        type: "int256",
      },
    ],
    name: "LogResult",
    type: "event",
  },
  { stateMutability: "payable", type: "fallback" },
  {
    inputs: [{ internalType: "address", name: "_receiver", type: "address" }],
    name: "DistributeFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "StakingContract",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gamePaused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "houseEdge",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "houseEdgeDivisor",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxNumber",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPendingPayouts",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProfit",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProfitAsPercentOfHouse",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProfitDivisor",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBet",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBetAspercent",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBetDivisor",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minNumber",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "ownerChangeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bool", name: "newStatus", type: "bool" }],
    name: "ownerPauseGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bool", name: "newPayoutStatus", type: "bool" }],
    name: "ownerPausePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "originalPlayerBetId", type: "bytes32" },
      { internalType: "address", name: "sendTo", type: "address" },
      {
        internalType: "uint256",
        name: "originalPlayerProfit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originalPlayerBetValue",
        type: "uint256",
      },
    ],
    name: "ownerRefundPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "newHouseEdge", type: "uint256" },
    ],
    name: "ownerSetHouseEdge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxProfitAsPercent",
        type: "uint256",
      },
    ],
    name: "ownerSetMaxProfitAsPercentOfHouse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "newMinimumBet", type: "uint256" },
    ],
    name: "ownerSetMinBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint32", name: "_Scalednewfee", type: "uint32" }],
    name: "ownerSetOraclizeSafeGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newTreasury", type: "address" }],
    name: "ownerSetTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "sendTo", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "ownerTransferEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newContractBalanceInWei",
        type: "uint256",
      },
    ],
    name: "ownerUpdateContractBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerkill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutsPaused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "addressToCheck", type: "address" },
    ],
    name: "playerGetPendingTxByAddress",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "rollUnder", type: "uint256" }],
    name: "playerRollDice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "playerWithdrawPendingTransactions",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "requestId", type: "bytes32" },
      { internalType: "uint256", name: "randomness", type: "uint256" },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "res",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBets",
    outputs: [{ internalType: "int256", name: "", type: "int256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeiWagered",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeiWon",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalweiLost",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
];
